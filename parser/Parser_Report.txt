一、
1. 能够识别声明语句、表达式以及赋值语句、分支语句和循环语句。
2. 可以自动计算Closure和GOTO函数，并自动生成LR分析表。
3. 具备简单语法错误处理能力，能准确给出错误所在位置，并采用可行的错误恢复策略。

二、
见Grammar_Good.txt文件

三、
见UML图
Parser为语法分析器的主类，其负责完成文法的识别，自动计算闭包以及生成LR分析表。Item为LR项目的类，其表示LR分析法中的项目，包含产生式以及当前的状态。
ItemSet类为对于项目集类，表示LR(1)中的项目集的概念。对于Production类，则表示文法中的产生式，包含产生式的左部、右部。
对于Lexer、Token以及Tag类，均为词法分析中的相应类。

Map，用来记录非终结符的first集和GOTO表。Set用来记录文法中的各类产生式、终结符、非终结符以及项目集族。
用2维数组记录LR分析表。

getFirst()函数用来计算所有非终结符的First集，由于LR(1)文法可能有左递归（包含直接左递归和间接左递归），所以求First集的步骤为三步，首先初始化所有的非终结符的First集为空集，然后利用LL分析中求First集的方法依次对所有的非终结符求First集，直到所有的非终结符对应的First集均不发生变化；最后将能导出空且包含左递归的产生式中的左部进行进一步的求First集，得到的即为所有的非终结符的First集。
getFirstFromString()用于计算某一个串的First集。
getClosure()函数用于求某一个项目的闭包。
goTo()函数用来求某一闭包的转移。
items()函数用来计算该文法的项目集族以及内部的转移。
fillLrTable()函数用来填LR分析表。
reduce()函数是将给定的token序列进行规约，并产生对应的产生式序列。

